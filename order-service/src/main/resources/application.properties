# suppress inspection "UnusedProperty" for whole file


spring.application.name=order-service

server.port:8081

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=parthu123
spring.jpa.hibernate.ddl-auto=update



eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka



#Actuator Settings
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4J Properties
#IMPORTANT NOTE: instances.{inventory}. here inventory is key (which can be anything). this same key should be in Annotation's 'name' property
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties (if network is slow in inventory service)
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s



management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0


spring.kafka.bootstrap-servers=localhost:9092

# setting default topic name so that spring boot sends the notification to this topic by default insetad of we mentioning the topic name
spring.kafka.template.default-topic=notificationTopic


# Letting Spring Boot know in which data format should the notification should be sent (Serializing)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


spring.kafka.producer.properties.spring.json.type.mapping=event:com.microservice.orderservice.event.OrderPlacedEvent
