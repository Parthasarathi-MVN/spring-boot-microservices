

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


spring.application.name=api-gateway


logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

#Product Service Route

spring.cloud.gateway.routes[0].id=product-service

#lb=load balance
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

#Order Service Route

spring.cloud.gateway.routes[1].id=order-service

#lb=load balance
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order


#Discovery Server Route

spring.cloud.gateway.routes[2].id=discovery-server

#lb=load balance
#spring.cloud.gateway.routes[2].uri=lb://localhost:8761
#since we have only one instance of Service Discovery, and we are tyring to use load balancer, the application is not spinning up, so we are using http

spring.cloud.gateway.routes[2].uri=http://localhost:8761

#using the path we are being redirected to localhost:8761/eureka/web but actual eureka server is presnt in localhost:8761 therefore we add a filter below
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web

#this filter will redirect to localhost:8761
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#Discovery Server Static Resources Route (for html/css/js). we get only html using the previous route (routes[2])
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-relm


